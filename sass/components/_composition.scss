//  He used float inside `&__photo` which restored the parent height, unlike me!
// https://stackoverflow.com/questions/13545947/position-absolute-and-parent-height

.composition {
  position: relative;
  // background-color: #bbb;
  // box-sizing: content-box;
  z-index: 1;

  // Trick to restore height!
  padding-top: 25%;

  &__photo {
    width: 55%;

    // Mine
    // box-shadow: 0 1rem 1rem rgba($color-black, 0.5);

    // Someone's
    // box-shadow: 2.1px 4.2px 4.2px hsl(0deg 0% 0% / 0.44);

    // Jonas's
    // box-shadow: 0 1.5rem 4rem rgba($color-black, 0.5);

    border-radius: 2px;
    position: absolute;
    transition: all 0.3s;
    outline-offset: 1.5rem;

    @include respond(tab-port) {
      width: 45%;
    }

    &:hover {
      // border: 10px solid crimson;
      transform: translateY(-0.5rem) scale(1.05);
      outline: 1.5rem solid $color-primary;
      z-index: 10;

      // Mine
      // box-shadow: 0 2rem 2rem rgba($color-black, 0.3);

      // Someone's
      // box-shadow: 6.7px 13.4px 13.4px hsl(0deg 0% 0% / 0.29);

      // Jonas's
      // box-shadow: 0 2.5rem 4rem rgba($color-black, 0.3);
    }

    &--p1 {
      top: -2rem;
      left: 0;

      @include respond(tab-port) {
        top: 0;
      }

      // Mine
      box-shadow: 0 1rem 1rem rgba($color-black, 0.5);
      &:hover {
        box-shadow: 0 2rem 2rem rgba($color-black, 0.3);
      }
    }

    &--p2 {
      top: 2rem;
      right: 0;

      @include respond(tab-port) {
        top: 0;
      }

      // Someone's
      box-shadow: 2.1px 4.2px 4.2px hsl(0deg 0% 0% / 0.44);
      &:hover {
        box-shadow: 6.7px 13.4px 13.4px hsl(0deg 0% 0% / 0.29);
      }
    }

    &--p3 {
      top: 10rem;
      left: 20%;

      @include respond(tab-port) {
        top: 0;
        left: 50%;
        transform: translate(-50%, -15%);
      }

      // Jonas's
      box-shadow: 0 1.5rem 4rem rgba($color-black, 0.5);
      &:hover {
        box-shadow: 0 2.5rem 4rem rgba($color-black, 0.3);

        @include respond(tab-port) {
          transform: translate(-50%, calc(-15% + -0.5rem)) scale(1.05);
          // and not
          // transform: scale(1.5) translate(-50%, calc(-15% + -0.5rem));

          // transform: translate(-50%, -15%);
        }
      }
    }

    // &:not(:last-child) {
    // margin-bottom: 5rem;
    // }
  }

  // Making the other (not hovered) images smaller trick!
  // .composition:hover .composition__photo:not(:hover)

  // Syntax #1
  // &:hover &__photo {
  //   &:not(:hover) {
  //     transform: scale(0.9);
  //     filter: grayscale(100%) blur(3px);
  //   }
  // }

  // Syntax #2
  &:hover &__photo:not(:hover) {
    transform: scale(0.9);
    filter: grayscale(100%) blur(3px);
  }

  @include respond(tab-port) {
    &:hover &__photo#{&}__photo--p3:not(:hover) {
      transform: translate(-50%, -15%) scale(0.9);
    }
  }

  // or
  // &:hover &__photo#{&}__photo--p3:not(:hover) {
  //   @include respond(tab-port) {
  //     transform: translate(-50%, -15%) scale(0.9);
  //   }
  // }
}
